网络通信的概念：
将具有独立功能的多台计算机通过通信线路和通信概念连接起来，在网管理软件以及网络通信协议下，实现资源共享和信息传递的虚拟平台

网络：是一种辅助双方或者多方能够连接在一起的工具

网络编程：能够编写基于网络通信的软件或程序


IP地址：分配给网络设备上网使用的数据标签，它能够识别网络中唯一的一台设备

IP地址分为俩类：ipv4，以及ipv6

ipv4：是现在目前使用的IP地址

ipv6：是未来使用的IP地址

查看自己ip地址命令：ipconfig（windows系统命令行中）

ip地址的作用：通过IP地址找到网络中唯一的一台设备，然后和这个设备进行数据通信

IP地址有两种主要的表现形式：固定格式和网际格式。

1. 固定格式
固定格式是传统上使用的IP地址表现形式。它由四个部分组成，每一部分称为一个"八位数"，用点分号（"."）分隔。每个部分的取值范围是0到255。例如：
192.168.1.1
特点：
前缀长度为32：表示的是一个私有地址（RFC 3021）。
共32位：分为网络号（24位）和主机号（8位，还包括保留的1位）。
示例：
192.168.0.1 （私有地址）
10.0.0.1 （公有地址）

2. 网际格式
网际格式是一种更现代的IP地址表现形式，适用于高维度的网络环境。它由两个部分组成，用冒号（':'）分隔。每个部分是一个十六进制数，通常以两位数的十六进制表示。例如：
2001:0db8:85a3:0000:0042:0000:ff04:004b
特点：
前缀长度为128位：表示的是一个公开地址，通常用于大型或多级网络。
共128位：分为网络号（64位）和主机号（64位）。
示例：
fe80::1 （用于表示单播地址）
2001:0db8:85a3:0000:0042:0000:ff04:004b （一个典型的IP地址）


端口：是数据传输的通道，是数据传输的必经之路（每个端口具有一个对应的端口号，想要找到端口通过端口号就可以）

端口号：操作系统为了管理这么多的端口，于是对端口进行的编号，就是端口号（就是一个数字一共65536个）
当运行一个程序会默认有一个端口号，当程序退出时，所占用的端口号就会被释放。


通信流程：通过IP地址找到对应的设备，通过端口号找到对应的端口，然后通过端口把数据给应用程序

端口号的分类：知名端口号，动态端口号

知名端口号：众所周知的端口号，范围从0到1023，这些端口号一般固定分配给一些服务
例如：21端口分配给FTP（文本传输协议），25端口分配给FMTP（简单邮件传输协议），80端口分配给HTTP（超文本传输协议）服务


动态端口号：一般程序员开发使用的端口号称为动态端口号，范围是1024到65535，如果程序员开发的程序没有设置端口号，操作系统会在动态端口号这个范围随机生成一个给开发的应用程序使用


socket（简称：套接字）：是程序之间的一个通信工具

tcp：传输控制协议，是一种面向连接的可靠的，具有字节流的传输通信协议

tcp通信步骤：
1.创建连接
2.传输数据
3.关闭连接

tcp特点：
1.面向连接

2.可靠传输（tcp采取发送应答机制，超时重传，错误校验，流量控制和拥塞管理）

UDP：用户数据报协议，在IP的数据包服务上增加了端口的功能和差错检测的功能

特点：
1.UDP是无连接的
2.使用尽最大努力交付
3.没有拥赛控制
4.面向报文
5.用户数据报只有8字节的首部开销

python3编码转换
网络数据以二进制进行传输，也就是说：在网络传输的时候，数据需要先将编码转化为二进制（bytes）数据类型


数据的编码转化：
encode（）   编码：将字符串转化为字节码
decode（）   解码：将字节码转化为字符串

bytes.decode(encoding="utf-8")
str.encode(encoding="utf-8")


encode（）和decode（）函数可以接受参数，encoding是指在编码过程中使用的编码方案



